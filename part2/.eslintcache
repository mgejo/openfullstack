[{"C:\\Users\\mgejo\\OneDrive - Ciena Corporation\\Desktop\\openfullstack\\part2\\src\\index.js":"1","C:\\Users\\mgejo\\OneDrive - Ciena Corporation\\Desktop\\openfullstack\\part2\\src\\components\\Note.js":"2","C:\\Users\\mgejo\\OneDrive - Ciena Corporation\\Desktop\\openfullstack\\part2\\src\\App.js":"3","C:\\Users\\mgejo\\OneDrive - Ciena Corporation\\Desktop\\openfullstack\\part2\\src\\services\\notes.js":"4"},{"size":168,"mtime":1610035727272,"results":"5","hashOfConfig":"6"},{"size":318,"mtime":1610036782716,"results":"7","hashOfConfig":"6"},{"size":2042,"mtime":1610037208429,"results":"8","hashOfConfig":"6"},{"size":595,"mtime":1610295624885,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"mwl07y",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\mgejo\\OneDrive - Ciena Corporation\\Desktop\\openfullstack\\part2\\src\\index.js",[],["20","21"],"C:\\Users\\mgejo\\OneDrive - Ciena Corporation\\Desktop\\openfullstack\\part2\\src\\components\\Note.js",[],"C:\\Users\\mgejo\\OneDrive - Ciena Corporation\\Desktop\\openfullstack\\part2\\src\\App.js",["22"],"import React, { useState, useEffect } from \"react\";\r\nimport Note from \"./components/Note\";\r\nimport noteService from \"./services/notes\";\r\n\r\nconst App = () => {\r\n  const [notes, setNotes] = useState([]);\r\n  const [newNote, setNewNote] = useState(\"\");\r\n  const [showAll, setShowAll] = useState(true);\r\n\r\n  useEffect(() => {\r\n    noteService.getAll().then((initialNotes) => {\r\n      setNotes(initialNotes);\r\n    });\r\n  }, []);\r\n\r\n  const toggleImportanceOf = (id) => {\r\n    const note = notes.find((n) => n.id === id);\r\n    const changedNote = { ...note, important: !note.important };\r\n\r\n    noteService.update(id, changedNote).then((returnedNote) => {\r\n      setNotes(notes.map((note) => (note.id !== id ? note : returnedNote)));\r\n    });\r\n  };\r\n\r\n  const notesToShow = showAll\r\n    ? notes\r\n    : notes.filter((note) => note.important === true);\r\n  const addNote = (event) => {\r\n    event.preventDefault();\r\n    const noteObject = {\r\n      content: newNote,\r\n      date: new Date().toISOString(),\r\n      important: Math.random() < 0.5,\r\n    };\r\n\r\n    noteService.create(noteObject).then((returnedNote) => {\r\n      setNotes(notes.concat(returnedNote));\r\n      setNewNote(\"\");\r\n    });\r\n  };\r\n  const handleNoteChange = (event) => {\r\n    setNewNote(event.target.value);\r\n  };\r\n  return (\r\n    <div>\r\n      <h1>Notes</h1>\r\n      <div>\r\n        <button onClick={() => setShowAll(!showAll)}>\r\n          show {showAll ? \"important\" : \"all\"}\r\n        </button>\r\n      </div>\r\n      <ul>\r\n        {notesToShow.map((note) => (\r\n          <Note\r\n            key={note.id}\r\n            note={note}\r\n            toggleImportance={() => toggleImportanceOf(note.id)}\r\n          />\r\n        ))}\r\n      </ul>\r\n      <form onSubmit={addNote}>\r\n        <input value={newNote} onChange={handleNoteChange} />\r\n        <button type=\"submit\">save</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null;\r\n  }\r\n\r\n  return <div className=\"error\">{message}</div>;\r\n};\r\n\r\nexport default App;\r\n","C:\\Users\\mgejo\\OneDrive - Ciena Corporation\\Desktop\\openfullstack\\part2\\src\\services\\notes.js",[],{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":69,"column":7,"nodeType":"29","messageId":"30","endLine":69,"endColumn":19},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"no-unused-vars","'Notification' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]